[tool.poetry]
name = "nr-fds-pyetl"
version = "0.1.0"
description = "Data sync tooling to keep legacy and new environments in sync"
authors = ["Your Name <you@example.com>"]
license = "Apache License 2.0"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
oracledb = "^2.4.1"
numpy = "^2.1.1"
SQLAlchemy = "^2.0.35"
PyYAML = "^6.0.2"
pandas = "^2.2.3"
pyarrow = "^18.0.0"
pypika = "^0.48.9"
boto3 = {extras = ["s3"], version = "^1.35.37"}
kubernetes = "^31.0.0"
requests = "^2.32.3"
openshift-client = "^2.0.4"
kr8s = "^0.17.4"

psycopg2-binary = "^2.9.10"
[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
ruff = "^0.6.9"
mypy-boto3 = "^1.35.38"

pytest = "^8.3.3"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = ["ALL"]

[tool.ruff]
line-length = 80

[tool.black]
line-length = 80

# Ignore some errors in tests as they are not relevant
[tool.ruff.lint.extend-per-file-ignores]
"**/tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "S105", # local dev password fields are verified
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
