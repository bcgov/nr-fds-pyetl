name: .Deploy

on:
  workflow_call:
    inputs:
      ### Required
      # Nothing! Only `secrets: inherit` is required

      ### Typical / recommended
      environment:
        description: GitHub/OpenShift environment; usually PR number, test or prod
        default: ''
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        default: ${{ github.event.number }}
        required: false
        type: string
      target:
        description: Deployment target; usually PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string
      triggers:
        description: File paths that trigger this workflow
        default: ''
        type: string

      ### Per-environment config
      db-pvc-size:
        description: Database PVC size; e.g. 1Gi
        default: "128Mi"
        type: string
      test:
        description: Run in test mode?
        default: true
        type: boolean
      test-mode:
        description: Test only?
        default: true
        type: string

    outputs:
      triggered:
        description: Was a deployment triggered?
        value: ${{ jobs.sync.outputs.deploy }}

jobs:
  # Deployments only run on Pull Requests if the sync/ directory is modified
  init:
    name: Init
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    steps:
      - name: Init
        uses: bcgov/action-deployer-openshift@v3.2.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          parameters:
            -p NAME=${{ github.event.repository.name }}
            -p ZONE=${{ inputs.target }}
            -p DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            -p FORESTCLIENTAPI_KEY=unused
            -p ORACLE_CERT_SECRET='${{ secrets.ORACLE_CERT_SECRET }}'
            -p ORACLE_HOST='${{ vars.ORACLE_HOST }}'
            -p ORACLE_PASSWORD='${{ secrets.ORACLE_PASSWORD }}'
            -p ORACLE_SERVICE='${{ vars.ORACLE_SERVICE }}'
            -p ORACLE_SYNC_USER='${{ vars.ORACLE_SYNC_USER }}'
            -p ORACLE_SYNC_PASSWORD='${{ secrets.ORACLE_SYNC_PASSWORD }}'
            -p ORACLE_USER='${{ vars.ORACLE_USER }}'
            -p VITE_USER_POOLS_WEB_CLIENT_ID=unused
          repository: bcgov/nr-spar
          triggers: ${{ inputs.triggers }}

  deploy:
    name: Deploy
    environment: ${{ inputs.environment }}
    needs: init
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    strategy:
      matrix:
        name: [database, sync]
        include:
          - name: database
            file: common/openshift.database.yml
            overwrite: false
            parameters:
              -p DB_PVC_SIZE=${{ inputs.db-pvc-size }}
              -p NAME=${{ github.event.repository.name }}
            repository: bcgov/nr-spar
          - name: sync
            file: sync/openshift.deploy.yml
            overwrite: true
            parameters:
              -p TAG=${{ inputs.tag }}
              -p TEST_MODE=${{ inputs.test-mode }}
            repository: ${{ github.repository }}
    steps:
      - uses: bcgov/action-deployer-openshift@v3.2.0
        timeout-minutes: 5
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: ${{ matrix.file }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=${{ inputs.target }}
            ${{ matrix.parameters }}
          repository: ${{ matrix.repository }}
          triggers: ${{ inputs.triggers }}

  test:
    name: Test ETL
    environment: ${{ inputs.environment }}
    if: inputs.test == true
    needs: deploy
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - timeout-minutes: 10
        uses: bcgov/action-oc-runner@v1.0.0
        with:
          cronjob: ${{ github.event.repository.name }}-${{ inputs.target }}-sync
          cronjob_tail: -1
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          triggers: ${{ inputs.triggers }}
