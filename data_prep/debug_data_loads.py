import datetime
import re

import oracledb
import pandas

data_dict = {
    "applicant_client_number": "00149081",
    "applicant_email_address": "abc@gov.bc.ca",
    "applicant_client_locn": "22",
    "approved_timestamp": None,
    "approved_userid": None,
    "bc_source_ind": "Y",
    "bec_version_id": None,
    "bgc_subzone_code": None,
    "bgc_zone_code": None,
    "biotech_processes_ind": "",
    "clctn_volume": None,
    "collection_cli_locn_cd": "22",
    "collection_cli_number": "00149081",
    "collection_elevation": None,
    "collection_elevation_max": None,
    "collection_elevation_min": None,
    "collection_end_date": None,
    "collection_latitude_code": None,
    "collection_lat_deg": None,
    "collection_lat_min": None,
    "collection_lat_sec": None,
    "collection_longitude_code": None,
    "collection_long_deg": None,
    "collection_long_min": None,
    "collection_long_sec": None,
    "collection_start_date": None,
    "cone_collection_method_code": None,
    "cone_collection_method2_code": None,
    "contaminant_pollen_bv": None,
    "controlled_cross_ind": "",
    "declared_timestamp": None,
    "declared_userid": None,
    "effective_pop_size": None,
    "elevation": None,
    "elevation_max": None,
    "elevation_min": None,
    "entry_timestamp": pandas.Timestamp("2024-11-30 03:18:21.584763"),
    "entry_userid": "BCEIDBUSINESS@SPAR_TEST1",
    "extraction_end_date": None,
    "extraction_st_date": None,
    "extrct_cli_number": "00012797",
    "extrct_cli_locn_cd": "00",
    "female_gametic_mthd_code": None,
    "genetic_class_code": "A",
    "interm_facility_code": "OCV",
    "interm_strg_client_locn": None,
    "interm_strg_client_number": None,
    "interm_strg_end_date": None,
    "interm_strg_locn": None,
    "interm_strg_st_date": None,
    "latitude_deg_max": None,
    "latitude_deg_min": None,
    "latitude_degrees": None,
    "latitude_min_max": None,
    "latitude_min_min": None,
    "latitude_minutes": None,
    "latitude_sec_max": None,
    "latitude_sec_min": None,
    "latitude_seconds": None,
    "longitude_deg_max": None,
    "longitude_deg_min": None,
    "longitude_degrees": None,
    "longitude_min_max": None,
    "longitude_min_min": None,
    "longitude_minutes": None,
    "longitude_sec_max": None,
    "longitude_sec_min": None,
    "longitude_seconds": None,
    "male_gametic_mthd_code": None,
    "no_of_containers": None,
    "orchard_comment": None,
    "orchard_id": "324",
    "secondary_orchard_id": None,
    "pollen_contamination_ind": "",
    "pollen_contamination_mthd_code": None,
    "pollen_contamination_pct": None,
    "revision_count": 3,
    "seed_plan_unit_id": None,
    "seedlot_comment": None,
    "seedlot_number": "64702",
    "seedlot_source_code": "TPT",
    "seedlot_status_code": "PND",
    "seed_store_client_locn": None,
    "seed_store_client_number": None,
    "smp_mean_bv_growth": None,
    "smp_parents_outside": None,
    "smp_success_pct": None,
    "temporary_storage_end_date": None,
    "temporary_storage_start_date": None,
    "to_be_registrd_ind": "Y",
    "total_parent_trees": None,
    "update_timestamp": pandas.Timestamp("2024-11-30 03:19:14.777902"),
    "update_userid": "BCEIDBUSINESS@SPAR_TEST1",
    "variant": None,
    "vegetation_code": "FDI",
    "vol_per_container": None,
    "p_seedlot_number": "64702",
    "s_applicant_client_number": "00149081",
    "q_applicant_client_number": "00149081",
    "s_applicant_email_address": "abc@gov.bc.ca",
    "q_applicant_email_address": "abc@gov.bc.ca",
    "s_applicant_client_locn": "22",
    "q_applicant_client_locn": "22",
    "s_approved_timestamp": None,
    "q_approved_timestamp": None,
    "s_approved_userid": None,
    "q_approved_userid": None,
    "s_bc_source_ind": "Y",
    "q_bc_source_ind": "Y",
    "s_bec_version_id": None,
    "q_bec_version_id": None,
    "s_bgc_subzone_code": None,
    "q_bgc_subzone_code": None,
    "s_bgc_zone_code": None,
    "q_bgc_zone_code": None,
    "s_biotech_processes_ind": "",
    "q_biotech_processes_ind": "",
    "s_clctn_volume": None,
    "q_clctn_volume": None,
    "s_collection_cli_locn_cd": "22",
    "q_collection_cli_locn_cd": "22",
    "s_collection_cli_number": "00149081",
    "q_collection_cli_number": "00149081",
    "s_collection_elevation": None,
    "q_collection_elevation": None,
    "s_collection_elevation_max": None,
    "q_collection_elevation_max": None,
    "s_collection_elevation_min": None,
    "q_collection_elevation_min": None,
    "s_collection_end_date": None,
    "q_collection_end_date": None,
    "s_collection_latitude_code": None,
    "q_collection_latitude_code": None,
    "s_collection_lat_deg": None,
    "q_collection_lat_deg": None,
    "s_collection_lat_min": None,
    "q_collection_lat_min": None,
    "s_collection_lat_sec": None,
    "q_collection_lat_sec": None,
    "s_collection_longitude_code": None,
    "q_collection_longitude_code": None,
    "s_collection_long_deg": None,
    "q_collection_long_deg": None,
    "s_collection_long_min": None,
    "q_collection_long_min": None,
    "s_collection_long_sec": None,
    "q_collection_long_sec": None,
    "s_collection_start_date": None,
    "q_collection_start_date": None,
    "s_cone_collection_method_code": None,
    "q_cone_collection_method_code": None,
    "s_cone_collection_method2_code": None,
    "q_cone_collection_method2_code": None,
    "s_contaminant_pollen_bv": None,
    "q_contaminant_pollen_bv": None,
    "s_controlled_cross_ind": "",
    "q_controlled_cross_ind": "",
    "s_declared_timestamp": None,
    "q_declared_timestamp": None,
    "s_declared_userid": None,
    "q_declared_userid": None,
    "s_effective_pop_size": None,
    "q_effective_pop_size": None,
    "s_elevation": None,
    "q_elevation": None,
    "s_elevation_max": None,
    "q_elevation_max": None,
    "s_elevation_min": None,
    "q_elevation_min": None,
    "s_entry_timestamp": pandas.Timestamp("2024-11-30 03:18:21.584763"),
    "q_entry_timestamp": pandas.Timestamp("2024-11-30 03:18:21.584763"),
    "s_entry_userid": "BCEIDBUSINESS@SPAR_TEST1",
    "q_entry_userid": "BCEIDBUSINESS@SPAR_TEST1",
    "s_extraction_end_date": None,
    "q_extraction_end_date": None,
    "s_extraction_st_date": None,
    "q_extraction_st_date": None,
    "s_extrct_cli_number": "00012797",
    "q_extrct_cli_number": "00012797",
    "s_extrct_cli_locn_cd": "00",
    "q_extrct_cli_locn_cd": "00",
    "s_female_gametic_mthd_code": None,
    "q_female_gametic_mthd_code": None,
    "s_genetic_class_code": "A",
    "q_genetic_class_code": "A",
    "s_interm_facility_code": "OCV",
    "q_interm_facility_code": "OCV",
    "s_interm_strg_client_locn": None,
    "q_interm_strg_client_locn": None,
    "s_interm_strg_client_number": None,
    "q_interm_strg_client_number": None,
    "s_interm_strg_end_date": None,
    "q_interm_strg_end_date": None,
    "s_interm_strg_locn": None,
    "q_interm_strg_locn": None,
    "s_interm_strg_st_date": None,
    "q_interm_strg_st_date": None,
    "s_latitude_deg_max": None,
    "q_latitude_deg_max": None,
    "s_latitude_deg_min": None,
    "q_latitude_deg_min": None,
    "s_latitude_degrees": None,
    "q_latitude_degrees": None,
    "s_latitude_min_max": None,
    "q_latitude_min_max": None,
    "s_latitude_min_min": None,
    "q_latitude_min_min": None,
    "s_latitude_minutes": None,
    "q_latitude_minutes": None,
    "s_latitude_sec_max": None,
    "q_latitude_sec_max": None,
    "s_latitude_sec_min": None,
    "q_latitude_sec_min": None,
    "s_latitude_seconds": None,
    "q_latitude_seconds": None,
    "s_longitude_deg_max": None,
    "q_longitude_deg_max": None,
    "s_longitude_deg_min": None,
    "q_longitude_deg_min": None,
    "s_longitude_degrees": None,
    "q_longitude_degrees": None,
    "s_longitude_min_max": None,
    "q_longitude_min_max": None,
    "s_longitude_min_min": None,
    "q_longitude_min_min": None,
    "s_longitude_minutes": None,
    "q_longitude_minutes": None,
    "s_longitude_sec_max": None,
    "q_longitude_sec_max": None,
    "s_longitude_sec_min": None,
    "q_longitude_sec_min": None,
    "s_longitude_seconds": None,
    "q_longitude_seconds": None,
    "s_male_gametic_mthd_code": None,
    "q_male_gametic_mthd_code": None,
    "s_no_of_containers": None,
    "q_no_of_containers": None,
    "s_orchard_comment": None,
    "q_orchard_comment": None,
    "s_orchard_id": "324",
    "q_orchard_id": "324",
    "s_secondary_orchard_id": None,
    "q_secondary_orchard_id": None,
    "s_pollen_contamination_ind": "",
    "q_pollen_contamination_ind": "",
    "s_pollen_contamination_mthd_code": None,
    "q_pollen_contamination_mthd_code": None,
    "s_pollen_contamination_pct": None,
    "q_pollen_contamination_pct": None,
    "s_revision_count": 3,
    "q_revision_count": 3,
    "s_seed_plan_unit_id": None,
    "q_seed_plan_unit_id": None,
    "s_seedlot_comment": None,
    "q_seedlot_comment": None,
    "s_seedlot_number": "64702",
    "q_seedlot_number": "64702",
    "s_seedlot_source_code": "TPT",
    "q_seedlot_source_code": "TPT",
    "s_seedlot_status_code": "PND",
    "q_seedlot_status_code": "PND",
    "s_seed_store_client_locn": None,
    "q_seed_store_client_locn": None,
    "s_seed_store_client_number": None,
    "q_seed_store_client_number": None,
    "s_smp_mean_bv_growth": None,
    "q_smp_mean_bv_growth": None,
    "s_smp_parents_outside": None,
    "q_smp_parents_outside": None,
    "s_smp_success_pct": None,
    "q_smp_success_pct": None,
    "s_temporary_storage_end_date": None,
    "q_temporary_storage_end_date": None,
    "s_temporary_storage_start_date": None,
    "q_temporary_storage_start_date": None,
    "s_to_be_registrd_ind": "Y",
    "q_to_be_registrd_ind": "Y",
    "s_total_parent_trees": None,
    "q_total_parent_trees": None,
    "s_update_timestamp": pandas.Timestamp("2024-11-30 03:19:14.777902"),
    "q_update_timestamp": pandas.Timestamp("2024-11-30 03:19:14.777902"),
    "s_update_userid": "BCEIDBUSINESS@SPAR_TEST1",
    "q_update_userid": "BCEIDBUSINESS@SPAR_TEST1",
    "s_variant": None,
    "q_variant": None,
    "s_vegetation_code": "FDI",
    "q_vegetation_code": "FDI",
    "s_vol_per_container": None,
    "q_vol_per_container": None,
}

statement = """
INSERT INTO the.seedlot(
    applicant_client_number, applicant_email_address, applicant_client_locn, approved_timestamp, approved_userid, bc_source_ind, bec_version_id, bgc_subzone_code, bgc_zone_code, biotech_processes_ind, clctn_volume, collection_cli_locn_cd, collection_cli_number, collection_elevation, collection_elevation_max, collection_elevation_min, collection_end_date, collection_latitude_code, collection_lat_deg, collection_lat_min, collection_lat_sec, collection_longitude_code, collection_long_deg, collection_long_min, collection_long_sec, collection_start_date, cone_collection_method_code, cone_collection_method2_code, contaminant_pollen_bv, controlled_cross_ind, declared_timestamp, declared_userid, effective_pop_size, elevation, elevation_max, elevation_min, entry_timestamp, entry_userid, extraction_end_date, extraction_st_date, extrct_cli_number, extrct_cli_locn_cd, female_gametic_mthd_code, genetic_class_code, interm_facility_code, interm_strg_client_locn, interm_strg_client_number, interm_strg_end_date, interm_strg_locn, interm_strg_st_date, latitude_deg_max, latitude_deg_min, latitude_degrees, latitude_min_max, latitude_min_min, latitude_minutes, latitude_sec_max, latitude_sec_min, latitude_seconds, longitude_deg_max, longitude_deg_min, longitude_degrees, longitude_min_max, longitude_min_min, longitude_minutes, longitude_sec_max, longitude_sec_min, longitude_seconds, male_gametic_mthd_code, no_of_containers, orchard_comment, orchard_id, secondary_orchard_id, pollen_contamination_ind, pollen_contamination_mthd_code, pollen_contamination_pct, revision_count, seed_plan_unit_id, seedlot_comment, seedlot_number, seedlot_source_code, seedlot_status_code, seed_store_client_locn, seed_store_client_number, smp_mean_bv_growth, smp_parents_outside, smp_success_pct, temporary_storage_end_date, temporary_storage_start_date, to_be_registrd_ind, total_parent_trees, update_timestamp, update_userid, variant, vegetation_code, vol_per_container)
VALUES(
    :applicant_client_number, :applicant_email_address, :applicant_client_locn, :approved_timestamp, :approved_userid, :bc_source_ind, :bec_version_id, :bgc_subzone_code, :bgc_zone_code, :biotech_processes_ind, :clctn_volume, :collection_cli_locn_cd, :collection_cli_number, :collection_elevation, :collection_elevation_max, :collection_elevation_min, :collection_end_date, :collection_latitude_code, :collection_lat_deg, :collection_lat_min, :collection_lat_sec, :collection_longitude_code, :collection_long_deg, :collection_long_min, :collection_long_sec, :collection_start_date, :cone_collection_method_code, :cone_collection_method2_code, :contaminant_pollen_bv, :controlled_cross_ind, :declared_timestamp, :declared_userid, :effective_pop_size, :elevation, :elevation_max, :elevation_min, :entry_timestamp, :entry_userid, :extraction_end_date, :extraction_st_date, :extrct_cli_number, :extrct_cli_locn_cd, :female_gametic_mthd_code, :genetic_class_code, :interm_facility_code, :interm_strg_client_locn, :interm_strg_client_number, :interm_strg_end_date, :interm_strg_locn, :interm_strg_st_date, :latitude_deg_max, :latitude_deg_min, :latitude_degrees, :latitude_min_max, :latitude_min_min, :latitude_minutes, :latitude_sec_max, :latitude_sec_min, :latitude_seconds, :longitude_deg_max, :longitude_deg_min, :longitude_degrees, :longitude_min_max, :longitude_min_min, :longitude_minutes, :longitude_sec_max, :longitude_sec_min, :longitude_seconds, :male_gametic_mthd_code, :no_of_containers, :orchard_comment, :orchard_id, :secondary_orchard_id, :pollen_contamination_ind, :pollen_contamination_mthd_code, :pollen_contamination_pct, :revision_count, :seed_plan_unit_id, :seedlot_comment, :seedlot_number, :seedlot_source_code, :seedlot_status_code, :seed_store_client_locn, :seed_store_client_number, :smp_mean_bv_growth, :smp_parents_outside, :smp_success_pct, :temporary_storage_end_date, :temporary_storage_start_date, :to_be_registrd_ind, :total_parent_trees, :update_timestamp, :update_userid, :variant, :vegetation_code, :vol_per_container)
"""

connection = oracledb.connect(
    user="the",
    password="default",
    host="localhost",
    port="1521",
    service_name="dbdock_01",
)


def extract_cols_from_sql(sql):
    # extract columns from sql
    cols = []
    stmt_no_whitespace = sql.replace("\n", " ")
    cols, values = re.split(
        "values", stmt_no_whitespace.rstrip(";"), flags=re.IGNORECASE
    )
    cols = cols.strip(" ").rstrip(")").partition("(")[2].rstrip(")").split(",")
    cols = [
        x.strip(" ").strip("`").strip("'").lstrip("[").rstrip("]") for x in cols
    ]
    return cols


def get_data_dict(sql, data_dict):
    cols = extract_cols_from_sql(sql)
    data_dict = {col: data_dict[col] for col in cols}
    return data_dict


def execute_statements(statement, data_dict):
    cur = connection.cursor()
    data_dict_for_statement = get_data_dict(statement, data_dict)
    cur.execute(statement, data_dict_for_statement)


def get_seedlots():
    query = """
    SELECT s.seedlot_number
        FROM spar.seedlot s
        FULL OUTER JOIN spar.seedlot_registration_a_class_save drft
        ON drft.seedlot_number = s.seedlot_number
    WHERE s.update_timestamp between %(start_time)s AND %(end_time)s
        OR drft.update_timestamp between %(start_time)s AND %(end_time)s
    ORDER BY seedlot_number
    """
    start_time = datetime.datetime(
        2025, 1, 21, 21, 44, 41, 905935, tzinfo=datetime.timezone.utc
    )
    end_time = datetime.datetime(
        2025, 1, 22, 21, 4, 5, 961843, tzinfo=datetime.timezone.utc
    )

    seedlots = connection.execute(
        query,
        {
            "start_time": "2024-11-30 03:19:14.777902",
            "end_time": "2024-11-30 03:19:14.777902",
        },
    )


statement = """
INSERT INTO the.seedlot_owner_quantity(seedlot_number, client_number, client_locn_code, original_pct_owned, original_pct_rsrvd, original_pct_srpls, qty_reserved, qty_rsrvd_cmtd_pln, qty_rsrvd_cmtd_apr, qty_surplus, qty_srpls_cmtd_pln, qty_srpls_cmtd_apr, method_of_payment_code, spar_fund_srce_code, revision_count)
VALUES(:seedlot_number, :client_number, :client_locn_code, :original_pct_owned, :original_pct_rsrvd, :original_pct_srpls, :qty_reserved, :qty_rsrvd_cmtd_pln, :qty_rsrvd_cmtd_apr, :qty_surplus, :qty_srpls_cmtd_pln, :qty_srpls_cmtd_apr, :method_of_payment_code, :spar_fund_srce_code, :revision_count)
"""

data = {
    "seedlot_number": "64718",
    "client_number": "00149081",
    "client_locn_code": "22",
    "original_pct_owned": 100,
    "original_pct_rsrvd": 100,
    "original_pct_srpls": 0,
    "qty_reserved": 0,
    "qty_rsrvd_cmtd_pln": 0,
    "qty_rsrvd_cmtd_apr": 0,
    "qty_surplus": 0,
    "qty_srpls_cmtd_pln": 0,
    "qty_srpls_cmtd_apr": 0,
    "method_of_payment_code": None,
    "spar_fund_srce_code": "",
    "revision_count": 10,
    "s_original_pct_owned": 100,
    "s_original_pct_rsrvd": 100,
    "s_original_pct_srpls": 0,
    "s_method_of_payment_code": None,
    "s_spar_fund_srce_code": "",
    "s_revision_count": 10,
    "p_seedlot_number": "64718",
    "p_client_number": "00149081",
    "p_client_locn_code": "22",
}

execute_statements(statement, data)
